package dto

import (
	"github.com/kingwel-xie/k2/common/dto"

	"{{.PackageName}}/models"

	 {{- $bb := false -}}
     {{- range .Columns -}}
     {{- if eq .GoType "time.Time"}}{{- $bb = true -}}{{- end -}}
     {{- end -}}
     {{- if eq $bb true }}
     "time"
     {{- end }}
)

type {{.ClassName}}GetPageReq struct {
    dto.Pagination     `search:"-"`
    {{- $tablename := .TBName -}}
    {{- range .Columns -}}
    {{$z := .Queryable}}
    {{- if ($z) }}
    {{.GoField}} {{.GoType}} `form:"{{.JsonField}}"  search:"type:{{if eq .QueryType "EQ"}}exact{{ else if eq .QueryType "NE"}}not-exact{{ else if eq .QueryType "LIKE"}}contains{{ else if eq .QueryType "GT"}}gt{{ else if eq .QueryType "GTE"}}gte{{ else if eq .QueryType "LT"}}lt{{ else if eq .QueryType "LTE"}}lte{{- end }};column:{{.ColumnName}};table:{{$tablename}}" comment:"{{.ColumnComment}}"`
    {{- end }}
    {{- end }}
    {{.ClassName}}Order
}

type {{.ClassName}}Order struct {
    {{- $tablename := .TBName -}}
    {{- range .Columns -}}
    {{- if (.Sortable) }}
    {{.GoField}} string `form:"{{.JsonField}}Order"  search:"type:order;column:{{.ColumnName}};table:{{$tablename}}"`
    {{- end -}}
    {{- end }}
}

func (m *{{.ClassName}}GetPageReq) GetNeedSearch() interface{} {
	return *m
}

type {{.ClassName}}InsertReq struct {
    {{- range .Columns -}}
    {{- if or .AutoInc .NotOnInsert }}
    {{- if .IsPk }}
    {{.GoField}} {{.GoType}} `json:"-" comment:"{{.ColumnComment}}"`
    {{- end -}}
    {{- else if eq .GoField "CreatedAt" -}}
    {{- else if eq .GoField "UpdatedAt" -}}
    {{- else if eq .GoField "DeletedAt" -}}
    {{- else if eq .GoField "CreateBy" -}}
    {{- else if eq .GoField "UpdateBy" -}}
    {{- else if not (.NotOnInsert) }}
    {{.GoField}} {{.GoType}} `json:"{{.JsonField}}" comment:"{{.ColumnComment}}" {{- if ne .Validator "" }} vd:"{{.Validator}}"{{- end -}}`
    {{- end -}}
    {{- end }}
}

func (s *{{.ClassName}}InsertReq) Generate(model *models.{{.ClassName}})  {
	 {{- range .Columns -}}
    {{$x := .AutoInc}}
    {{- if ($x) }}
    {{- else if eq .GoField "CreatedAt" -}}
    {{- else if eq .GoField "UpdatedAt" -}}
    {{- else if eq .GoField "DeletedAt" -}}
    {{- else if eq .GoField "CreateBy" -}}
    {{- else if eq .GoField "UpdateBy" -}}
    {{- else if not (.NotOnInsert) }}
    model.{{.GoField}} = s.{{.GoField}}
    {{- end -}}
    {{- end }}
}

func (s *{{.ClassName}}InsertReq) GetId() interface{} {
	return s.{{.PkGoField}}
}

type {{.ClassName}}UpdateReq struct {
    {{- range .Columns -}}
    {{$x := .IsPk}}
    {{- if ($x) }}
    {{.GoField}} {{.GoType}} `uri:"{{.JsonField}}" comment:"{{.ColumnComment}}"`
    {{- else if not (.NotOnUpdate) }}
    {{.GoField}} {{.GoType}} `json:"{{.JsonField}}" comment:"{{.ColumnComment}}" {{- if ne .Validator "" }} vd:"{{.Validator}}"{{- end -}}`
    {{- end -}}
    {{- end }}
}

func (s *{{.ClassName}}UpdateReq) Generate(model *models.{{.ClassName}})  {
	 {{- range .Columns -}}
    {{$x := .IsPk}}
    {{- if ($x) }}
    model.{{.GoField}} = s.{{.GoField}}
    {{- else if not (.NotOnUpdate) }}
    model.{{.GoField}} = s.{{.GoField}}
    {{- end -}}
    {{- end }}
}

func (s *{{.ClassName}}UpdateReq) GetId() interface{} {
	return s.{{.PkGoField}}
}

// {{.ClassName}}GetReq 功能获取请求参数
type {{.ClassName}}GetReq struct {
	{{- range .Columns -}}
    {{$x := .IsPk}}
    {{- if ($x) }}
     {{.GoField}} {{.GoType}} `uri:"{{.JsonField}}"`
    {{- end }}
    {{- end }}
}

func (s *{{.ClassName}}GetReq) GetId() interface{} {
	return s.{{.PkGoField}}
}

// {{.ClassName}}DeleteReq 功能删除请求参数
type {{.ClassName}}DeleteReq struct {
	Ids []{{.PkGoType}} `json:"ids"`
}

func (s *{{.ClassName}}DeleteReq) GetId() interface{} {
	return s.Ids
}